import tkinter as tk
from tkinter import simpledialog, messagebox
import json

# 加载配置文件
def load_config():
    with open("config.json", "r", encoding="utf-8") as f:
        return json.load(f)

# 刷新显示状态
def refresh_display():
    config = load_config()
    for i, window in enumerate(config['windows']):
        if i < len(windows):
            # 更新分窗口内容和背景颜色
            windows[i].delete("1.0", tk.END)
            windows[i].insert(tk.END, "\n".join(window['text']))
            windows[i].config(bg=window['bg_color'])

# 弹出账密验证
def auth_popup():
    username = simpledialog.askstring("登录", "请输入用户名:")
    password = simpledialog.askstring("登录", "请输入密码:", show="*")
    # 假设验证用户名和密码
    if username == "user" and password == "pass":
        messagebox.showinfo("成功", "登录成功！")
    else:
        messagebox.showerror("错误", "用户名或密码错误！")

# 创建主窗口
root = tk.Tk()
root.title("小程序报警机况")
root.geometry("1000x500")
root.resizable(False, False)  # 禁用窗口大小调整

# 读取配置
config = load_config()

# 创建分窗口区域（3行3列）
windows = []
for i, window_config in enumerate(config['windows']):
    frame = tk.LabelFrame(root,width=25,height=8,)
    frame = tk.Text(root, width=25, height=8, wrap="word", bg=window_config['bg_color'])
    frame.insert(tk.END, "\n".join(window_config['text']))  # 显示多行内容
    frame.config(state="disabled")  # 禁用编辑
    frame.grid(row=i // 3, column=i % 3, padx=10, pady=10)
    frame.bind("<Button-1>", lambda e: auth_popup())  # 单击事件绑定
    windows.append(frame)

# 创建刷新按钮
refresh_button = tk.Button(root, text="刷新", command=refresh_display)
refresh_button.grid(row=3, column=1, pady=20)

# 创建图例
legend_frame = tk.Frame(root)
legend_frame.grid(row=1, column=4, sticky="n")

tk.Label(legend_frame, text="图例:", font=("Arial", 12, "bold")).grid(row=0, column=0, columnspan=2, pady=5)
for i, (color, description) in enumerate(config["legend"].items()):
    color_label = tk.Label(legend_frame, text="    ", bg=color, width=4, height=1)
    color_label.grid(row=i + 1, column=0, padx=5, pady=5)
    text_label = tk.Label(legend_frame, text=description)
    text_label.grid(row=i + 1, column=1, padx=5, pady=5)

root.mainloop()
